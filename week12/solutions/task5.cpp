#include <iostream>
using namespace std;
/* както вече видяхме, ако подаваме указатели към променливите си
   независимо, че самите указатели се копират, адресите към които
   те сочат си стоят същите и тогава можем да променяме дори чрез
   функции стойностите на променливи.

   Обаче ако искаме да променим стойността на указател - т.е. адреса
   към който сочи?? Очевидно не можем просто да кажем във функцията
   findTheGreaterValue(int* first, int* second, int* pointer) {
        if (*first >= *second){
            pointer = first;
        } else {
            pointer = second;
        }
   }
   Защо? Защото тази променлива pointer е във тялото на функцията и тя е
   копие на указателя, който сме подали. Променянето на нейната стойност
   не влияе на стойността на указателя. Обаче ако вместо указател подадем
   указател към указателя, то тогава какво получаваме
   получаваме pointerToPointer, чиято стойност е адреса на указателя, а
   не стойността на указателя (която също е адрес, но на променлива от тип int)
   Тогава променяйки стойността на pointerToPointer, променяме адреса към
   който сочи указателят, който искаме да променим.
*/


void findTheGreaterValue(int* first, int* second, int** pointer) {
    if (*first >= *second) { // ако стойността на променливата с адрес first е >= от стойността
                             // на променливата с адрес second, то
        *pointer = first; // адресът който сочи указателят, чиито адрес се сочи от pointer , ще стане равен на first
    } else {
        *pointer = second;  // адресът който сочи указателят, чиито адрес се сочи от pointer , ще стане равен на second
    }
    /* може би, ако не ви е ясно засега, да се опитате бавно да прочетете това изречение в коментара и 
       да се опитате да го "разифровате"
    */
}

int main() {
    int a = 3;
    int b = 4;
    int *pa = &a;
    int *pb = &b;
    int **p = &pa;
    findTheGreaterValue(pa, pb, p);
    *(*p) += 5;
    cout << "a: " << a << endl; // оказва се че a е непроменена
    cout << "b: " << b << endl; // но b е променена и е 9

    return 0;
}
